{"version":3,"file":"static/js/673.d2c429bd.chunk.js","mappings":"kNAEcA,EAAU,mCAAG,WAAOC,EAAMC,EAAOC,GAApB,uFACFC,EAAAA,EAAAA,IAAA,uCAA0CH,GAAQ,CACvEI,OAAQ,MACRC,OAAQ,CACNC,QAAS,mCACTL,MAAOA,EACPC,KAAMA,KANe,cACnBK,EADmB,yBAUlBA,EAASC,MAVS,2CAAH,yD,gHCDxB,EAAuB,mBAAvB,EAAgD,kBAAhD,EAAgF,0B,SCyDhF,EArDa,WACV,OAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACSC,GAAYC,EAAAA,EAAAA,MAAZD,QAWX,IATCE,EAAAA,EAAAA,YAAU,YAERf,EAAAA,EAAAA,GAAW,SAAD,OAAUa,EAAV,aACPG,MAAK,SAAAP,GAAI,OACRG,EAAQH,EAAKE,KADL,IAGTM,MAAMC,QAAQC,IAClB,GAAE,CAACN,IAEAF,EAIJ,OACE,8BACGA,EAAKS,OAAS,GACb,wBACGT,EACEU,MAAM,EAAG,IACTC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACH,gBAAaC,UAAWC,EAAxB,UACGF,GACC,gBACEG,IAAG,yCAAoCH,GACvCI,IAAKN,EACLG,UAAWC,EACXG,MAAM,SAGR,gBAAKJ,UAAWC,EAAhB,8BAEF,4BACE,wBACE,uBAAIJ,OAEN,wCACa,uBAAIC,YAhBZF,EADN,OAwBT,uCAIP,C","sources":["api/fetchApi.js","webpack://react-homework-template/./src/pages/Movies/Cast/Cast.module.scss?89a2","pages/Movies/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\n export const fetchMovie = async (path, query, page) => {\n  const response = await axios.get(`https://api.themoviedb.org/3/${path}`, {\n    method: 'get',\n    params: {\n      api_key: 'f54499984816fc4c5f9a225c08a06c8d',\n      query: query,\n      page: page,\n    },\n  });\n\n  return response.data;\n};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Cast_item__MJS7k\",\"img\":\"Cast_img__OE9CS\",\"imgNotFound\":\"Cast_imgNotFound__NpqfC\"};","import { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from 'react';\nimport { fetchMovie } from \"../../../api/fetchApi\";\nimport style from './Cast.module.scss';\n\nconst Cast = () => {\n   const [cast, setCast] = useState(null);\n    const { movieId } = useParams();\n    \n  useEffect(() => {\n\n    fetchMovie(`movie/${movieId}/credits`)\n      .then(data => \n        setCast(data.cast)\n      )\n      .catch(console.log);\n  }, [movieId]);\n\n if (!cast) {\n    return;\n    }\n    \n  return (\n    <>\n      {cast.length > 0 ? (\n        <ul>\n          {cast\n            .slice(0, 19)\n            .map(({ id, name, character, profile_path }) => (\n              <li key={id} className={style.item}>\n                {profile_path ? (\n                  <img\n                    src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n                    alt={name}\n                    className={style.img}\n                    width=\"100\"\n                  />\n                ) : (\n                  <div className={style.imgNotFound}>Image not found</div>\n                )}\n                <div>\n                  <p>\n                    <b>{name}</b>\n                  </p>\n                  <p>\n                    Character: <b>{character}</b>\n                  </p>\n                </div>\n              </li>\n            ))}\n        </ul>\n      ) : (\n        <div>No casts</div>\n      )}\n    </>\n  );\n};\n\nexport default Cast;"],"names":["fetchMovie","path","query","page","axios","method","params","api_key","response","data","useState","cast","setCast","movieId","useParams","useEffect","then","catch","console","log","length","slice","map","id","name","character","profile_path","className","style","src","alt","width"],"sourceRoot":""}