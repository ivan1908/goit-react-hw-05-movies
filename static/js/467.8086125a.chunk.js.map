{"version":3,"file":"static/js/467.8086125a.chunk.js","mappings":"kNAEcA,EAAU,mCAAG,WAAOC,EAAMC,EAAOC,GAApB,uFACFC,EAAAA,EAAAA,IAAA,uCAA0CH,GAAQ,CACvEI,OAAQ,MACRC,OAAQ,CACNC,QAAS,mCACTL,MAAOA,EACPC,KAAMA,KANe,cACnBK,EADmB,yBAUlBA,EAASC,MAVS,2CAAH,yD,+ECDxB,EAAuB,wBAAvB,EAAuD,yBAAvD,EAAuF,wBAAvF,EAAsH,wB,SCqCtH,EAlCkB,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,UACnBC,GAAWC,EAAAA,EAAAA,MAEjB,OACA,gCACKF,IAAa,eAAIG,UAAWC,EAAf,SAA6BJ,KAC3C,eAAIG,UAAWC,EAAf,SACCL,EAAOM,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OACV,eAAaL,UAAWC,EAAxB,UACE,SAAC,KAAD,CACEK,GAAE,kBAAaH,GACfI,MAAO,CAAEC,KAAMV,GACfE,UAAWC,EAHb,SAKGG,GAASC,KANLF,EADC,QAcnB,C,6ICxBD,GAAgB,KAAO,qBAAqB,MAAQ,sBAAsB,OAAS,uBAAuB,OAAS,wB,SCgEnH,EAzDe,WAAO,IAAD,EACnB,GAAwCM,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMvB,EAAK,UAAGsB,EAAaE,IAAI,gBAApB,QAAgC,GAE3C,GAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOjB,EAAP,KAAekB,EAAf,KACA,GAAoCD,EAAAA,EAAAA,UAAS,MAA7C,eAAOE,EAAP,KAAmBC,EAAnB,KACA,GAAsCH,EAAAA,EAAAA,WAAS,GAA/C,eAAOI,EAAP,KAAoBC,EAApB,KACA,GAAsCL,EAAAA,EAAAA,UAASzB,GAA/C,eAAO+B,EAAP,KAAoBC,EAApB,MAEAC,EAAAA,EAAAA,YAAU,WACLjC,IAEH0B,EAAU,OAEV5B,EAAAA,EAAAA,GAAW,eAAgBE,GACxBkC,MAAK,SAAA3B,GACJmB,EAAUnB,EAAK4B,SACfP,EAAcrB,EAAK6B,eACnBN,GAAe,EAChB,IACAO,MAAMC,QAAQC,KAClB,GAAE,CAACvC,IAaJ,OACE,iCACE,kBAAMY,UAAWC,EAAAA,KAAY2B,SATX,SAAAC,GACpBA,EAAMC,iBACN,IACMC,EADOF,EAAMG,OACU5C,MAAM6C,MAAMC,cAAcC,OACvDxB,EAAgB,CAAEvB,MAAO2C,GAC1B,EAIG,WACI,kBACEK,KAAK,OACP/B,KAAK,QACLL,UAAWC,EAAAA,MACXgC,MAAOd,EACPkB,SAnBY,SAAAR,GAClBT,EAAeS,EAAMS,cAAcL,MACpC,EAkBOM,YAAY,sBAEd,oBAAQH,KAAK,SAASpC,UAAWC,EAAAA,OAAjC,WACE,SAAC,MAAD,CAAUuC,KAAM,MACd,iBAAMxC,UAAWC,EAAAA,YAAjB,2BAGLgB,IAAe,SAAC,IAAD,IACfrB,IAAU,SAAC6C,EAAA,EAAD,CAAW7C,OAAQA,IACd,IAAfmB,IAAoB,gDAG1B,C","sources":["api/fetchApi.js","webpack://react-homework-template/./src/components/MovieList/MovieList.module.scss?f9f6","components/MovieList/MovieList.jsx","webpack://react-homework-template/./src/pages/Movies/Movies.module.scss?c7a6","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\n export const fetchMovie = async (path, query, page) => {\n  const response = await axios.get(`https://api.themoviedb.org/3/${path}`, {\n    method: 'get',\n    params: {\n      api_key: 'f54499984816fc4c5f9a225c08a06c8d',\n      query: query,\n      page: page,\n    },\n  });\n\n  return response.data;\n};","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieList_list__psP2f\",\"title\":\"MovieList_title__IznO5\",\"item\":\"MovieList_item__uj8y-\",\"link\":\"MovieList_link__CQ7eq\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport style from './MovieList.module.scss';\n\nconst MovieList = ({ movies, titlePage }) => {\n    const location = useLocation();\n    \n    return (\n    <>\n        {titlePage && <h1 className={style.title}>{titlePage}</h1>}\n        <ul className={style.list}>\n        {movies.map(({ id, title, name }) => (\n          <li key={id} className={style.item}>\n            <Link\n              to={`/movies/${id}`}\n              state={{ from: location }}\n              className={style.link}\n            >\n              {title || name}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n    );\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string,\n    }).isRequired\n  ),\n  titlePage: PropTypes.string,\n};\n\nexport default MovieList;","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Movies_form__LIisa\",\"input\":\"Movies_input__cOyYs\",\"submit\":\"Movies_submit__tYU-2\",\"button\":\"Movies_button__lQtxf\"};","import { useSearchParams } from \"react-router-dom\";\nimport { useState, useEffect } from 'react';\nimport { BsSearch } from 'react-icons/bs';\nimport { fetchMovie } from \"../../api/fetchApi\";\nimport { Loader } from '../../components/Loading/Loading';\nimport MovieList from 'components/MovieList/MovieList';\nimport style from './Movies.module.scss';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  const [movies, setMovies] = useState(null);\n  const [totalMovie, setTotalMovie] = useState(null);\n  const [showLoading, setShowLoading] = useState(true);\n  const [inputSearch, setInputSearch] = useState(query);\n\n  useEffect(() => {\n   if(!query) return;\n    \n    setMovies(null);\n\n    fetchMovie(`search/movie`, query)\n      .then(data => {\n        setMovies(data.results);\n        setTotalMovie(data.total_results);\n        setShowLoading(false);\n      })\n      .catch(console.log);\n  }, [query]);\n\n  const handleInput = event => {\n    setInputSearch(event.currentTarget.value);\n  }\n\n   const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n    const queryNormalized = form.query.value.toLowerCase().trim();\n    setSearchParams({ query: queryNormalized });\n  };\n\n  return (\n    <>\n      <form className={style.form} onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n          name=\"query\"\n          className={style.input}\n          value={inputSearch}\n          onChange={handleInput}\n          placeholder=\"Enter movie name\"\n        />\n        <button type=\"submit\" className={style.button}>\n          <BsSearch size={14} />\n            <span className={style.buttonLabel}> Search</span>\n          </button>\n      </form>\n      {showLoading && <Loader />}\n      {movies && <MovieList movies={movies} />} \n      {totalMovie === 0 && <div>Not found movies</div>}\n    </>\n  );\n};\n\nexport default Movies;"],"names":["fetchMovie","path","query","page","axios","method","params","api_key","response","data","movies","titlePage","location","useLocation","className","style","map","id","title","name","to","state","from","useSearchParams","searchParams","setSearchParams","get","useState","setMovies","totalMovie","setTotalMovie","showLoading","setShowLoading","inputSearch","setInputSearch","useEffect","then","results","total_results","catch","console","log","onSubmit","event","preventDefault","queryNormalized","target","value","toLowerCase","trim","type","onChange","currentTarget","placeholder","size","MovieList"],"sourceRoot":""}